/*
10.4. Таблица (8)
Рассмотрим прямоугольную таблицу размером n ´ m. Занумеруем строки таблицы числами от 1 до n, а столбцы – числами от 1 до m. Будем такую таблицу последовательно заполнять числами следующим образом.
Обозначим через aij число, стоящее на пересечении i-ой строки и j-ого столбца. Первая строка таблицы заполняется заданными числами – a11, a12, …, a1m. Затем заполняются строки с номерами от 2 до n. Число aij вычисляется как сумма всех чисел таблицы, находящихся в «треугольнике» над элементом aij. Все вычисления при этом выполняются по модулю r.
ai,j
Например, если таблица состоит из трех строк и четырех столбцов, и первая строка состоит из чисел 2,3,4,5, а r = 40 то для этих исходных данных таблица будет выглядеть следующим образом (взятие по модулю показано только там, где оно приводит к изменению числа):
2 3 4 5
5 = 2 + 3 9 = 2 + 3 + 4 12 = 3 + 4 + 5 9 = 4 + 5
23 = 2 + 3 + 4 + 5 + 9 0 = (2 + 3 + 4 + 5 + 5 + 9 + 12) mod 40 = 40 mod 40 4 = (2 + 3 + 4 + 5 + 9 + 12 + 9) mod 40 = 44 mod 40 33 = 3 + 4 + 5 + 12 + 9
Требуется написать программу, которая по заданной первой строке таблицы (a11, a12, …, a1m), вычисляет последнюю строку, как описано выше.
Ввод из файла INPUT.TXT. 
В первой строке содержатся числа n, m и r (2 ≤ n, m ≤ 2000, 2 ≤ r ≤ 109) – число строк и столбцов таблицы соответственно, а также число, по модулю которого надо посчитать ответ. Следующая строка содержит m целых чисел – первую строку таблицы: a11, a12, …, a1m. Все a1i неотрицательны и не превосходят 109.
Вывод в файл OUTPUT.TXT. 
В единственной строке необходимо вывести m чисел – последнюю строку таблицы: an1, an2, …, anm.

Пример
Ввод
2 3 10
1 2 3

Вывод
3 6 5

Канюшкова Мария ПС-21
Visual Studio 2019
*/

#include <fstream>
#include <vector>

using namespace std;

int main() {
	ifstream fin("input.txt");
	ofstream fout("output.txt");

	int n, m;
	long mod;
	fin >> n >> m >> mod;

	vector<vector<long long>> a(n + 1, vector<long long>(m + 2, 0));
	vector<vector<long long>> l(n + 1, vector<long long>(m + 2, 0)); // сумма чисел в левом треугольнике
	vector<vector<long long>> r(n + 1, vector<long long>(m + 2, 0)); // сумма чисел в правом треугольнике
	vector<vector<long long>> t(n + 1, vector<long long>(m + 2, 0)); // сумма чисел сверху

	for (int j = 1; j <= m; j++) {
		fin >> a[1][j];
	}

	for (int i = 2; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			a[i][j] = (l[i - 1][j - 1] + t[i - 1][j] + r[i - 1][j + 1] + a[i - 1][j - 1] + a[i - 1][j] + a[i - 1][j + 1]) % mod;
			l[i][j] = (l[i - 1][j - 1] + t[i - 1][j] + a[i - 1][j - 1] + a[i - 1][j]) % mod;
			r[i][j] = (t[i - 1][j] + r[i - 1][j + 1] + a[i - 1][j] + a[i - 1][j + 1]) % mod;
			t[i][j] = (t[i - 1][j] + a[i - 1][j]) % mod;
		}
	}

	for (int j = 1; j <= m; j++) {
		fout << a[n][j] << ' ';
	}
	fout << endl;
}